name: docgen

on:
  workflow_call:
    inputs:
      project-name:
        description: The name of the project
        required: true
        type: string
      name:
        description: The name of the project
        required: true
        type: string
      type:
        description: The type of the project
        required: true
        type: string
      sha:
        description: The SHA of the project
        required: true
        type: string
      artifact-id:
        description: The id of the uploaded artifact
        required: true
        type: string
      mono-repo:
        description: Whether this targets a monorepo or not
        required: true
        type: boolean
      package:
        description: The package name as passed through the matrix, only used if mono-repo is true
        required: false
        type: string
      node-version:
        description: The version of Node.js to use (default `20`)
        required: false
        default: 20
        type: number
      operating-system:
        description: The operating system to use (default `ubuntu-latest`)
        required: false
        default: ubuntu-latest
        type: string
      with-submodules:
        description: Whether to include submodules when checking out the repository (default `false`)
        required: false
        default: 'false'
        type: string
    secrets:
      SKYRA_TOKEN:
        description: The token to use for the documentation repository
        required: true

jobs:
  upload:
    name: Upload Documentation
    runs-on: ${{ inputs.operating-system}}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v5
        with:
          submodules: ${{ inputs.with-submodules }}
      - name: Install dependencies
        uses: sapphiredev/.github/actions/install-yarn-dependencies@main
        with:
          node-version: ${{ inputs.node-version }}
      - name: Download Documentation Artifacts
        uses: actions/download-artifact@v5
        with:
          name: ${{ inputs.artifact-id}}
          path: docs
      - name: Checkout Documentation Project
        uses: actions/checkout@v5
        with:
          repository: 'sapphiredev/docs'
          token: ${{ secrets.SKYRA_TOKEN }}
          path: 'out'
          submodules: ${{ inputs.with-submodules }}

      - name: Extract Package and Semver
        if: inputs.type == 'tag' && inputs.mono-repo == true
        id: extract-tag
        uses: sapphiredev/.github/actions/format-tag@main
        with:
          tag: ${{ inputs.name }}

      #region Move [Mono Repo]
      - name: Move Documentation [Mono Repo Tag]
        if: inputs.mono-repo == true && inputs.type == 'tag' && inputs.package == steps.extract-tag.outputs.package
        run: |
          mkdir -p out/docs/${{ inputs.project-name }}/${{ steps.extract-tag.outputs.package }}
          mv docs/${{ steps.extract-tag.outputs.package }}/docs/api.json out/docs/${{ inputs.project-name }}/${{ steps.extract-tag.outputs.package }}/${{ steps.extract-tag.outputs.semver }}.json
      - name: Move Documentation [Mono Repo Branch]
        if: inputs.mono-repo == true && inputs.type == 'branch'
        run: |
          mkdir -p out/docs/${{ inputs.project-name }}/${{ inputs.package }}
          mv docs/${{ inputs.package }}/docs/api.json out/docs/${{ inputs.project-name }}/${{ inputs.package }}/${{ inputs.name }}.json
      #endregion

      #region Move [Regular Repo]
      - name: Move Documentation [Regular Repo Tag]
        if: inputs.mono-repo == false && inputs.type == 'tag'
        run: |
          mkdir -p out/${{ inputs.project-name }}
          mv docs/api.json out/docs/${{ inputs.project-name }}/${{ inputs.name }}.json
      - name: Move Documentation [Regular Repo Branch]
        if: inputs.mono-repo == false && inputs.type == 'branch'
        run: |
          mkdir -p out/${{ inputs.project-name }}
          mv docs/api.json out/docs/${{ inputs.project-name }}/${{ inputs.name }}.json
      # endregion

      - name: Commit & Push
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_on: error
          timeout_minutes: 1
          command: |
            cd out
            git add .
            if git diff-index --quiet HEAD --; then
              echo "No changes to commit, exiting with code 0"
              exit 0;
            else
              git config user.name github-actions[bot]
              git config user.email 41898282+github-actions[bot]@users.noreply.github.com
              git config rebase.autostash true
              git config pull.rebase true
              git commit -m "docs(${{ inputs.project-name }}): build for ${{ inputs.type }} ${{ inputs.name }}: ${{ inputs.sha }}" || true
              git pull
              git push
            fi
